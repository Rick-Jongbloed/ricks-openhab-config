// ========= GANG =================
// plafondlamp
// Switch		light_gang_toggle									        "Plafondlamp gang (switch)"												                        (g_hue_lamp_gang_1v, sf_corridor, lights, scene_all_off)		                                                { channel="hue:0210:0017884775f9:1:color"}
// Switch		light_gang_setting_all_off							        "Plafondlamp gang (all off)"											    <switch>          (g_hue_lamp_gang_1v, settings_all_off_selection, g_restore)											                        
// Dimmer  	light_gang_dimmer									        "Plafondlamp gang (dimmer)"												                        (g_hue_lamp_gang_1v, sf_corridor)											                                    { channel="hue:0210:0017884775f9:1:color"}
// Color  		light_gang_color									        "Plafondlamp gang (color)"												                        (g_hue_lamp_gang_1v, sf_corridor)											                                    { channel="hue:0210:0017884775f9:1:color"}
// Dimmer 		light_gang_colortemp								        "Plafondlamp gang (colortemp)"											                        (g_hue_lamp_gang_1v, sf_corridor)											                                    { channel="hue:0210:0017884775f9:1:color_temperature"}
// String 		light_gang_alert									        "Plafondlamp gang (alert)"												                        (g_hue_lamp_gang_1v, sf_corridor)											                                    { channel="hue:0210:0017884775f9:1:alert"}
// Switch 		light_gang_effect									        "Plafondlamp gang (effect)"												                        (g_hue_lamp_gang_1v, sf_corridor)											                                    { channel="hue:0210:0017884775f9:1:effect"}

// ========= TOILET =================
// Xiaomi Window Switch toilet 1v
Contact     sensor_toilet_1v_switch_status                              "Deursensor toilet 1v (status) [%s]"                                        <door>                (g_mihome_doorsensor_toilet_1v,ff_bathroom,g_restore)                                                         { channel="mihome:sensor_magnet:158d0001ab695f:isOpen" }
Number      sensor_toilet_1v_alarm_timer                                "Deursensor toilet 1v (alarm timer) [%d]"                                   <clock>                 (g_mihome_doorsensor_toilet_1v,ff_bathroom)                                                                 { channel="mihome:sensor_magnet:158d0001ab695f:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_toilet_1v_last_opened                                "Deursensor toilet 1v (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"       <clock-on>              (g_mihome_doorsensor_toilet_1v,ff_bathroom,g_restore)                                                       { channel="mihome:sensor_magnet:158d0001ab695f:lastOpened" }
Number      sensor_toilet_1v_battery                                    "Deursensor toilet 1v (battery) [%d %%]"                                    <battery>               (g_mihome_doorsensor_toilet_1v,ff_bathroom,g_chart, g_elastic_mqtt)                                                         { channel="mihome:sensor_magnet:158d0001ab695f:batteryLevel" }
Switch      sensor_toilet_1v_battery_low                                "Deursensor toilet 1v (battery low) [%s]"                                   <energy>                (g_mihome_doorsensor_toilet_1v,ff_bathroom)                                                                 { channel="mihome:sensor_magnet:158d0001ab695f:lowBattery" }


// ========= BADKAMER =================
// sensor badkamer
String		temp_badkamer_sensor_raw								    "Temperatuur badkamer RAW [%.1f °C]"										<temperature>           (g_rfxcom_temp_humid, ff_shower, g_chart, g_elastic_mqtt)			                                         { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:temperature"[profile="transform:JS", function="calibrate_temp.js"]}
Number		temp_badkamer_sensor_cali								    "Temperatuur badkamer [%.1f °C]"											<temperature>           (g_rfxcom_temp_humid, ff_shower, g_chart, g_elastic_mqtt)					
Number		humid_badkamer_sensor									    "Luchtvochtigheid badkamer [%d %%]"					                        <humidity>				(g_rfxcom_temp_humid, ff_shower, g_chart, g_elastic_mqtt, g_lastupdate_rule)	                            { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:humidity"}
String 		humid_status_badkamer_sensor							    "Luchtvochtigheid badkamer Beschrijving [%s]"		                        <humidity>				(g_rfxcom_temp_humid, ff_shower)					                                                        { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:humidityStatus"}
Number 		battery_level_badkamer_sensor							    "Batterijstatus badkamer [%s]"						                        <battery>				(g_rfxcom_temp_humid, ff_shower, g_chart, g_elastic_mqtt)			                                                        { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:batteryLevel"}
Number 		signal_level_badkamer_sensor							    "Signaalniveau badkamer [%s]"						                        <status>				(g_rfxcom_temp_humid, ff_shower, g_chart, g_elastic_mqtt)			                                                        { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:signalLevel"}
Switch 		battery_low_badkamer_sensor							        "Batterij laag alarm badkamer [%d]"					                        <status>				(g_rfxcom_temp_humid, ff_shower)			                                                                { channel="rfxcom:temperaturehumidity:d10d8fa9:imagetonronix_sensor_keuken:lowBattery"}
DateTime	humid_badkamer_sensor_lastupdate		                    "Luchtvochtigheid badkamer (Lastupdate) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]" 	<humidity>			    (g_rfxcom_temp_humid, g_restore, g_lastupdate)                        				                            

// Xiaomi Window Switch badkamer
Contact     sensor_badkamer_switch_status                               "Deursensor badkamer (status) [%s]"                                          <door>                 (g_mihome_doorsensor_badkamer,ff_shower,g_restore)                                                           { channel="mihome:sensor_magnet:158d0001c0ed0f:isOpen" }
Number      sensor_badkamer_alarm_timer                                 "Deursensor badkamer (alarm timer) [%d]"                                     <clock>                  (g_mihome_doorsensor_badkamer,ff_shower)                                                                   { channel="mihome:sensor_magnet:158d0001c0ed0f:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_badkamer_last_opened                                 "Deursensor badkamer (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"         <clock-on>               (g_mihome_doorsensor_badkamer,ff_shower,g_restore)                                                         { channel="mihome:sensor_magnet:158d0001c0ed0f:lastOpened" }
Number      sensor_badkamer_battery                                     "Deursensor badkamer (battery) [%d %%]"                                      <battery>                (g_mihome_doorsensor_badkamer,ff_shower,g_chart, g_elastic_mqtt)                                                           { channel="mihome:sensor_magnet:158d0001c0ed0f:batteryLevel" }
Switch      sensor_badkamer_battery_low                                 "Deursensor badkamer (battery low) [%s]"                                     <energy>                 (g_mihome_doorsensor_badkamer,ff_shower)                                                                   { channel="mihome:sensor_magnet:158d0001c0ed0f:lowBattery" }


// ========= SUNNY =========
// hue lamp Sunny // verplaatst naar kantoor (midden)
// Switch		light_plafond_sunny_toggle								    "Plafondlamp Sunny (switch)"												 <light>                (g_hue_lamp_plafond_sunny, gf_child, lights, scene_all_off)								                    { channel="hue:0210:0017884775f9:5:color" }
// Switch		light_plafond_sunny_setting_all_off						    "Plafondlamp Sunny (all off)"												 <switch>               (g_hue_lamp_plafond_sunny, settings_all_off_selection, g_restore)
// Dimmer  	light_plafond_sunny_dimmer								    "Plafondlamp Sunny (dimmer)"												                        (g_hue_lamp_plafond_sunny, gf_child)											                            { channel="hue:0210:0017884775f9:5:color" }
// Color  		light_plafond_sunny_color								    "Plafondlamp Sunny (color)"												                            (g_hue_lamp_plafond_sunny, gf_child)											                            { channel="hue:0210:0017884775f9:5:color" }
// Dimmer 		light_plafond_sunny_colortemp							    "Plafondlamp Sunny (colortemp)"											                            (g_hue_lamp_plafond_sunny, gf_child)											                            { channel="hue:0210:0017884775f9:5:color_temperature" }
// String 		light_plafond_sunny_alert								    "Plafondlamp Sunny (alert)"												                            (g_hue_lamp_plafond_sunny, gf_child)											                            { channel="hue:0210:0017884775f9:5:alert" }
// Switch 		light_plafond_sunny_effect								    "Plafondlamp Sunny (effect)"												                        (g_hue_lamp_plafond_sunny, gf_child)											                            { channel="hue:0210:0017884775f9:5:effect" }

// Xiaomi Window Switch sunny
Contact     sensor_sunny_switch_status                                  "Deursensor Sunny (status) [%s]"                                          <door>                 (g_mihome_doorsensor_sunny,gf_child,g_restore)                                                                   { channel="mihome:sensor_magnet:158d0001c0e00a:isOpen" }
Number      sensor_sunny_alarm_timer                                    "Deursensor Sunny (alarm timer) [%d]"                                     <clock>                  (g_mihome_doorsensor_sunny,gf_child)                                                                           { channel="mihome:sensor_magnet:158d0001c0e00a:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_sunny_last_opened                                    "Deursensor Sunny (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"         <clock-on>               (g_mihome_doorsensor_sunny,gf_child,g_restore)                                                                 { channel="mihome:sensor_magnet:158d0001c0e00a:lastOpened" }
Number      sensor_sunny_battery                                        "Deursensor Sunny (battery) [%d %%]"                                      <battery>                (g_mihome_doorsensor_sunny,gf_child,g_chart, g_elastic_mqtt)                                                                   { channel="mihome:sensor_magnet:158d0001c0e00a:batteryLevel" }
Switch      sensor_sunny_battery_low                                    "Deursensor Sunny (battery low) [%s]"                                     <energy>                 (g_mihome_doorsensor_sunny,gf_child)                                                                           { channel="mihome:sensor_magnet:158d0001c0e00a:lowBattery" }

// ========= KANTOOR =========
// Xiaomi Door Switch kantoor
Contact     sensor_kantoor_switch_status                                "Deursensor kantoor (status) [%s]"                                          <door>                 (g_mihome_doorsensor_kantoor,ff_office,g_restore)                                                           { channel="mihome:sensor_magnet:158d00019fe78a:isOpen" }
Number      sensor_kantoor_alarm_timer                                  "Deursensor kantoor (alarm timer) [%d]"                                     <clock>                (g_mihome_doorsensor_kantoor,ff_office)                                                                     { channel="mihome:sensor_magnet:158d00019fe78a:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_kantoor_last_opened                                  "Deursensor kantoor (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"         <clock-on>             (g_mihome_doorsensor_kantoor,ff_office,g_restore)                                                           { channel="mihome:sensor_magnet:158d00019fe78a:lastOpened" }
Number      sensor_kantoor_battery                                      "Deursensor kantoor (battery) [%d %%]"                                      <battery>              (g_mihome_doorsensor_kantoor,ff_office,g_chart, g_elastic_mqtt)                                                             { channel="mihome:sensor_magnet:158d00019fe78a:batteryLevel" }
Switch      sensor_kantoor_battery_low                                  "Deursensor kantoor (battery low) [%s]"                                     <energy>               (g_mihome_doorsensor_kantoor,ff_office)                                                                     { channel="mihome:sensor_magnet:158d00019fe78a:lowBattery" }

// raamsensor kantoor
Contact     sensor_kantoor_raam_switch_status                           "Raamsensor kantoor (status) [%s]"                                          <door>                  (g_mihome_raamsensor_kantoor,ff_office,g_restore)                                                           { channel="mihome:sensor_magnet_aq2:158d0001de6146:isOpen" }
Number      sensor_kantoor_raam_alarm_timer                             "Raamsensor kantoor (alarm timer) [%d]"                                     <clock>                 (g_mihome_raamsensor_kantoor,ff_office)                                                                     { channel="mihome:sensor_magnet_aq2:158d0001de6146:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_kantoor_raam_last_opened                             "Raamsensor kantoor (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"         <clock-on>              (g_mihome_raamsensor_kantoor,ff_office,g_restore)                                                           { channel="mihome:sensor_magnet_aq2:158d0001de6146:lastOpened" }
Number      sensor_kantoor_raam_battery                                 "Raamsensor kantoor (battery) [%d %%]"                                      <battery>               (g_mihome_raamsensor_kantoor,ff_office,g_chart, g_elastic_mqtt)                                                             { channel="mihome:sensor_magnet_aq2:158d0001de6146:batteryLevel" }
Switch      sensor_kantoor_raam_battery_low                             "Raamsensor kantoor (battery low) [%s]"                                     <energy>                (g_mihome_raamsensor_kantoor,ff_office)                                                                     { channel="mihome:sensor_magnet_aq2:158d0001de6146:lowBattery" }

// hue lamp kantoor
// Switch		light_plafond_kantoor_links_toggle						    "Plafondlamp kantoor links (switch) [%s]"										                    (g_hue_lamp_kantoor_links, ff_office, lights, scene_all_off)		                                        { channel="hue:0220:0017884775f9:2:brightness"}
// Switch		light_plafond_kantoor_links_setting_all_off				    "Plafondlamp kantoor links (all off)"   								    <switch>              (g_hue_lamp_kantoor_links, settings_all_off_selection, g_restore)
// Dimmer 	 	light_plafond_kantoor_links_dimmer						    "Plafondlamp kantoor links (dimmer) [%d %%]"										                (g_hue_lamp_kantoor_links, ff_office)						                                                { channel="hue:0220:0017884775f9:2:brightness"}
// Dimmer 		light_plafond_kantoor_links_colortemp					    "Plafondlamp kantoor links (colortemp)"										                        (g_hue_lamp_kantoor_links, ff_office)						                                                { channel="hue:0220:0017884775f9:2:color_temperature"}

// moved to slaapkamer
// Switch		light_plafond_kantoor_midden_toggle						    "Plafondlamp kantoor midden (switch) [%s]"										                    (g_hue_lamp_kantoor_midden, ff_office, lights, scene_all_off)					                            { channel="hue:0220:0017884775f9:3:brightness"}
// Switch		light_plafond_kantoor_midden_setting_all_off				"Plafondlamp kantoor midden (all off)"  									<switch>              (g_hue_lamp_kantoor_midden, settings_all_off_selection, g_restore)
// Dimmer 	 	light_plafond_kantoor_midden_dimmer						    "Plafondlamp kantoor midden (dimmer) [%d %%]"										                (g_hue_lamp_kantoor_midden, ff_office)						                                                { channel="hue:0220:0017884775f9:3:brightness"}
// Dimmer 		light_plafond_kantoor_midden_colortemp					    "Plafondlamp kantoor midden (colortemp)"									                        (g_hue_lamp_kantoor_midden, ff_office)						                                                { channel="hue:0220:0017884775f9:3:color_temperature"}

Switch		light_plafond_kantoor_links_toggle								 "Hue color kantoor links (switch)"												                        (g_hue_lamp_kantoor_links, ff_office, lights, scene_all_off,ff_office_lights)								                                        { channel="hue:0210:0017884775f9:6:color"}
Switch		light_plafond_kantoor_links_setting_all_off						            "Hue color kantoor links (all off)"												<switch>              (g_hue_lamp_kantoor_links, settings_all_off_selection, g_restore)
Dimmer  	light_plafond_kantoor_links_dimmer								            "Hue color kantoor links (dimmer)"												                        (g_hue_lamp_kantoor_links, ff_office)											                                                { channel="hue:0210:0017884775f9:6:color"}
Color  		light_plafond_kantoor_links_color								            "Hue color kantoor links (color)"												                            (g_hue_lamp_kantoor_links, ff_office)											                                            { channel="hue:0210:0017884775f9:6:color"}
Dimmer 		light_plafond_kantoor_links_colortemp							            "Hue color kantoor links (colortemp)"											                            (g_hue_lamp_kantoor_links, ff_office)											                                            { channel="hue:0210:0017884775f9:6:color_temperature"}
String 		light_plafond_kantoor_links_alert								            "Hue color kantoor links (alert)"												                            (g_hue_lamp_kantoor_links, ff_office)											                                            { channel="hue:0210:0017884775f9:6:alert"}
Switch 		light_plafond_kantoor_links_effect								            "Hue color kantoor links (effect)"												                        (g_hue_lamp_kantoor_links, ff_office)											                                                { channel="hue:0210:0017884775f9:6:effect"}

Switch		light_plafond_kantoor_midden_toggle								    "Hue color kantoor midden (switch)"												 <light>                (g_hue_lamp_kantoor_midden, ff_office, lights, scene_all_off,ff_office_lights)								                    { channel="hue:0210:0017884775f9:5:color" }
Switch		light_plafond_kantoor_midden_setting_all_off						    "Hue color kantoor midden (all off)"												 <switch>               (g_hue_lamp_kantoor_midden, settings_all_off_selection, g_restore)
Dimmer  	light_plafond_kantoor_midden_dimmer								    "Hue color kantoor midden (dimmer)"												                        (g_hue_lamp_kantoor_midden, ff_office)											                            { channel="hue:0210:0017884775f9:5:color" }
Color  		light_plafond_kantoor_midden_color								    "Hue color kantoor midden (color)"												                            (g_hue_lamp_kantoor_midden, ff_office)											                            { channel="hue:0210:0017884775f9:5:color" }
Dimmer 		light_plafond_kantoor_midden_colortemp							    "Hue color kantoor midden (colortemp)"											                            (g_hue_lamp_kantoor_midden, ff_office)											                            { channel="hue:0210:0017884775f9:5:color_temperature" }
String 		light_plafond_kantoor_midden_alert								    "Hue color kantoor midden (alert)"												                            (g_hue_lamp_kantoor_midden, ff_office)											                            { channel="hue:0210:0017884775f9:5:alert" }
Switch 		light_plafond_kantoor_midden_effect								    "Hue color kantoor midden (effect)"												                        (g_hue_lamp_kantoor_midden, ff_office)											                            { channel="hue:0210:0017884775f9:5:effect" }

Switch		light_plafond_kantoor_rechts_toggle						    "Plafondlamp kantoor rechts (switch) [%s]"										                    (g_hue_lamp_kantoor_rechts, ff_office, lights, scene_all_off,ff_office_lights)						                                        { channel="hue:0220:0017884775f9:4:brightness"}
Switch		light_plafond_kantoor_rechts_setting_all_off				"Plafondlamp kantoor rechts (all off)"  									<switch>	            (g_hue_lamp_kantoor_rechts, settings_all_off_selection, g_restore)
Dimmer 	 	light_plafond_kantoor_rechts_dimmer						    "Plafondlamp kantoor rechts (dimmer) [%d %%]"										                (g_hue_lamp_kantoor_rechts, ff_office)						                                                { channel="hue:0220:0017884775f9:4:brightness"}
Dimmer 		light_plafond_kantoor_rechts_colortemp					    "Plafondlamp kantoor rechts (colortemp) [%d]"									                        (g_hue_lamp_kantoor_rechts, ff_office)						                                                { channel="hue:0220:0017884775f9:4:color_temperature"}

// xiaomi gateway
Switch		gateway_mihome_net_online					                "MiHome Gateway (net) [%s]"					                        <network>	            (g_controller_mihome_gateway, ff_office)                                                                    { channel="network:pingdevice:192_168_1_85:online" }
Number		gateway_mihome_net_time						                "MiHome Gateway (ping) [%.0f ms]"				                        <status>				(g_controller_mihome_gateway, g_chart, g_elastic_mqtt)                                                                      { channel="network:pingdevice:192_168_1_85:latency" }
DateTime	gateway_mihome_net_lastseen				                    "MiHome Gateway (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"		    <calendar>		        (g_controller_mihome_gateway, g_restore)                                                                    { channel="network:pingdevice:192_168_1_85:lastseen" }            

// Xiaomi Gateway // should be in all off???
Switch      gateway_mihome_light_toggle                                 "MiHome Gateway lightswitcn"                                                <light>                 (g_controller_mihome_gateway, ff_office, scene_all_off)                                                                    { channel="mihome:gateway:34ce00907e07:brightness" }
Switch      gateway_mihome_light_setting_all_off                        "MiHome Gateway light (all off)"                                            <switch>              (g_controller_mihome_gateway, settings_all_off_selection, g_restore)
Dimmer      gateway_mihome_light_brightness                             "MiHome Gateway brightness"                                                 <dimmablelight>         (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:brightness" }
Color       gateway_mihome_light_color                                  "MiHome Gateway color"                                                      <rgb>                   (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:color" }
Dimmer      gateway_mihome_light_colortemperature                       "MiHome Gateway colortemperature"                                           <heating>               (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:colorTemperature" }
Number      gateway_mihome_light_ambientlight                           "MiHome Gateway ambientlight"                                               <sun>                   (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:illumination" }
Number      gateway_mihome_sound                                        "MiHome Gateway sound"                                                      <soundvolume-0>         (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:sound" }
Switch      gateway_mihome_sound_switch                                 "MiHome Gateway sound switch"                                               <soundvolume_mute>      (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:enableSound" }
Dimmer      gateway_mihome_sound_volume                                 "MiHome Gateway sound volume"                                               <soundvolume>           (g_controller_mihome_gateway, ff_office)                                                                    { channel="mihome:gateway:34ce00907e07:volume" }

// pc kantoor
Switch		kantoor_pc_net_online									    "Kantoor PC (net) [%s]"								                        <network>				(g_desktop_kantoor, ff_office)                                                                              { channel="network:pingdevice:192_168_1_123:online" }
Number		kantoor_pc_net_time										    "Kantoor PC (ping) [%.0f ms]"						                        <status>				(g_desktop_kantoor, g_chart, g_elastic_mqtt)                                                                                { channel="network:pingdevice:192_168_1_123:latency" }
DateTime	kantoor_pc_net_lastseen				                        "Kantoor PC (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"		                <calendar>				(g_desktop_kantoor, g_restore)                                                                              { channel="network:pingdevice:192_168_1_123:lastseen" }            
//Switch		kantoor_pc_toggle       							        "Kantoor PC (toggle)"														<switch>              (g_desktop_kantoor)
Switch		kantoor_pc_setting_all_off						            "Kantoor PC (all off)"							                            <switch>				(g_desktop_kantoor, settings_all_off_selection, g_restore)
Switch		kantoor_pc_turn_off										    "Kantoor PC (turn off)"														                        (g_desktop_kantoor, ff_office, scene_all_off)						                                        { exec="OFF:/bin/sh@@-c@@/opt/openhab2/conf/scripts/windows_shutdown.sh 192.168.1.123  192.168.1.123 shutdown_user VRYKX7fmdejkBY9Qq31a", autoupdate="false"}
Switch		kantoor_pc_turn_on										    "Kantoor PC (turn on)"														                        (g_desktop_kantoor, ff_office)						                                                        { wol="192.168.1.255#30:5A:3A:04:E5:FA", autoupdate="false" }


// switch monitors
Switch		switch_kantoor_pc_monitors_net_online					    "Kantoor PC monitors (net) [%s]"					                        <network>				(g_sonoff_kantoor_pc_monitors)                                                                              { channel="network:pingdevice:192_168_1_157:online" }
Number		switch_kantoor_pc_monitors_net_time						    "Kantoor PC monitors (ping) [%.0f ms]"				                        <status>				(g_sonoff_kantoor_pc_monitors, g_chart, g_elastic_mqtt)                                                                     { channel="network:pingdevice:192_168_1_157:latency" }
DateTime	switch_kantoor_pc_monitors_net_lastseen				        "Kantoor PC monitors (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"		    <calendar>				(g_sonoff_kantoor_pc_monitors, g_restore)                                                                   { channel="network:pingdevice:192_168_1_157:lastseen" }            
Switch  	switch_kantoor_pc_monitors_toggle						    "Kantoor PC monitors (switch) [%s]"                                         <switch>				(g_sonoff_kantoor_pc_monitors, ff_office)      		                                                        { mqtt=">[mosquitto:cmnd/sonoff_monitors_beast/power:command:*:default], <[mosquitto:stat/sonoff_monitors_beast/POWER:state:default]"}
String		switch_kantoor_pc_monitors_toggle_startup_state			    "Kantoor PC monitors (startup state) [%s]"			                        <light> 				(g_sonoff_kantoor_pc_monitors,g_maintenance_sonoff_status, g_sonoff_startup_states)                         { mqtt="<[mosquitto:stat/sonoff_monitors_beast/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }
Switch		switch_kantoor_pc_monitors_reachable					    "Kantoor PC monitors (reachable) [%s]"				                        <switch>				(g_sonoff_kantoor_pc_monitors)						                                                        { mqtt="<[mosquitto:tele/sonoff_monitors_beast/LWT:state:MAP(reachable.map)]"}
Number		switch_kantoor_pc_monitors_rssi							    "Kantoor PC monitors (RSSI) [%d %%]"				                        <status>				(g_sonoff_kantoor_pc_monitors, g_chart, g_elastic_mqtt)						                                                { mqtt="<[mosquitto:tele/sonoff_monitors_beast/STATE:state:JSONPATH($.Wifi.RSSI)]"}
String		switch_kantoor_pc_monitors_action__sonoff_monitors_beast	"Kantoor PC monitors (action)"					                            <network>				(g_maintenance_sonoff_action) 				                                                                { autoupdate="false" }
String		switch_kantoor_pc_monitors_local_fw_version 			    "Kantoor PC monitors (running fw version) [%s]"								                        (g_sonoff_kantoor_pc_monitors, g_maintenance_sonoff_status, g_sonoff_firmware)                              { mqtt="<[mosquitto:tele/sonoff_monitors_beast/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_monitors_beast/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }
String		switch_kantoor_pc_monitors_fw_version 					    "Kantoor PC monitors (fw version) [%s]"										                        (g_sonoff_kantoor_pc_monitors, g_maintenance_sonoff_status)

// router hoort hier
// wireless statistics
//Number  	wifi_internal_signal									    "Wifi signaal interne wifi (1) [%s]"										                        (g_router_asus, g_chart, g_elastic_mqtt)							                                                        { exec="<[/bin/sh@@-c@@/opt/openhab2/conf/scripts/detect_wifi_signal.sh TheInternets:10000:REGEX((.*))]" }

//Number      router_processor1_load                                      "Router processor 1 Load [%d%%]"                                                                    (g_router_asus, g_chart, g_elastic_mqtt)                                                                                    { snmp="<[192.168.1.254:public:.1.3.6.1.2.1.25.3.3.1.2.196608:10000]"}     // update every five secs - edit every 10 secs
//Number      router_processor2_load                                      "Router processor 2 Load [%d%%]"                                                                    (g_router_asus, g_chart, g_elastic_mqtt)                                                                                    { snmp="<[192.168.1.254:public:.1.3.6.1.2.1.25.3.3.1.2.196609:10000]"}     // update every five secs - edit: every 10 secs
//String      router_temperature                                          "Router temperature string [%s]"                                                                    (g_router_asus)                                                                                             { snmp="<[192.168.1.254:public:.1.3.6.1.4.1.32473.8.1.101.1:60000]"}       // update every five secs - edit: every 1 minute
Number      router_temperature_50_1                                     "Router temperature 5Ghz 1 [%.1f °C]"                                                               (g_router_asus, g_chart, g_elastic_mqtt)  
Number      router_temperature_24                                       "Router temperature 2.4ghz [%.1f °C]"                                                               (g_router_asus, g_chart, g_elastic_mqtt) 
Number      router_temperature_50_2                                     "Router temperature 5Ghz 2 [%.1f °C]"                                                               (g_router_asus, g_chart, g_elastic_mqtt)      
Number      router_temperature_cpu                                      "Router temperature CPU [%.1f °C]"                                                                  (g_router_asus, g_chart, g_elastic_mqtt)        
//String      router_wan_ip_address                                       "Router WAN IP address [%s]"                                                                        (g_router_asus, g_restore)                                                                                  { snmp="<[192.168.1.254:public:.1.3.6.1.4.1.32473.8.2.101.1:600000]"}    // update every 10 minutes
Switch		router_net_online			                    		    "Router (net) [%s]"					                                        <network>				(g_router_asus)                                                                                             { channel="network:pingdevice:192_168_1_254:online" }
Number		router_net_time				                    		    "Router (ping) [%.0f ms]"				                                    <status>				(g_router_asus, g_chart, g_elastic_mqtt)                                                                                    { channel="network:pingdevice:192_168_1_254:latency" }
DateTime	router_net_lastseen					                        "Router (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"			                <calendar>				(g_router_asus, g_restore)                                                                                  { channel="network:pingdevice:192_168_1_254:lastseen" }         

// switch samsung speaker
Switch		switch_samsung_speaker_net_online						    "Switch Samsung speaker (net) [%s]"					                        <network>				(g_sonoff_samsung_speaker, ff_office)					                                                    { channel="network:pingdevice:192_168_1_155:online" }
Number		switch_samsung_speaker_net_time							    "Switch Samsung speaker (ping) [%.0f ms]"			                        <status>				(g_sonoff_samsung_speaker, g_chart, g_elastic_mqtt)									                                        { channel="network:pingdevice:192_168_1_155:latency" }
DateTime	switch_samsung_speaker_net_lastseen				            "Switch Samsung speaker (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"		    <calendar>				(g_sonoff_samsung_speaker, g_restore)                                                                       { channel="network:pingdevice:192_168_1_155:lastseen" }            
Switch		switch_samsung_speaker_toggle	  						    "Switch Samsung speaker (toggle) [%s]"            	                        <switch>				(g_sonoff_samsung_speaker, ff_office, scene_all_off)                                                        { mqtt=">[mosquitto:cmnd/sonoff_samsung_speaker/power:command:*:default],      <[mosquitto:stat/sonoff_samsung_speaker/POWER:state:default]" }
String		switch_samsung_speaker_toggle_startup_state				    "Switch Samsung speaker (startup state) [%s]"		                        <light> 			    (g_sonoff_samsung_speaker, g_maintenance_sonoff_status, g_sonoff_startup_states)		                    { mqtt="<[mosquitto:stat/sonoff_samsung_speaker/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }
Switch		switch_samsung_speaker_reachable						    "Switch Samsung speaker (reachable) [%s]"			                        <switch>				(g_sonoff_samsung_speaker)							                                                        { mqtt="<[mosquitto:tele/sonoff_samsung_speaker/LWT:state:MAP(reachable.map)]" }
Number		switch_samsung_speaker_rssi								    "Switch Samsung speaker (RSSI) [%d %%]"				                        <status>				(g_sonoff_samsung_speaker, g_chart, g_elastic_mqtt)							                                                { mqtt="<[mosquitto:tele/sonoff_samsung_speaker/STATE:state:JSONPATH($.Wifi.RSSI)]" }
String		switch_samsung_speaker_action__sonoff_samsung_speaker       "Switch Samsung speaker (action)"					                        <network>				(g_maintenance_sonoff_action)							                                                    { autoupdate="false" }
String		switch_samsung_speaker_local_fw_version 				    "Switch Samsung speaker (running fw version) [%s]"							                        (g_sonoff_samsung_speaker, g_maintenance_sonoff_status, g_sonoff_firmware) 	                                { mqtt="<[mosquitto:tele/sonoff_samsung_speaker/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_samsung_speaker/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }
String		switch_samsung_speaker_fw_version 						    "Switch Samsung speaker (fw version) [%s]"									                        (g_sonoff_samsung_speaker, g_maintenance_sonoff_status)

// samsung speaker
Switch		speaker_samsung_multiroom_net_online					    "Samsung speaker (net) [%s]"						                        <network>				(g_speaker_samsung_multiroom, ff_office)					                                                { channel="network:pingdevice:192_168_1_5:online"}
Number		speaker_samsung_multiroom_net_time						    "Samsung speaker (ping) [%.0f ms]"					                        <status>				(g_speaker_samsung_multiroom, g_chart, g_elastic_mqtt)								                                        { channel="network:pingdevice:192_168_1_5:latency"}
DateTime	speaker_samsung_multiroom_net_lastseen				        "Samsung speaker (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"		        <calendar>				(g_speaker_samsung_multiroom, g_restore)                                                                    { channel="network:pingdevice:192_168_1_5:lastseen" }            

// bewegingssensor kantoor (monitor)
Switch      sensor_motion_office_motion_status                          "Bewegingssensor kantoor monitor (status) [%s]"                                     <motion>                (g_mihome_motionsensor_kantoor_monitor, ff_office)                                                                  { channel="mihome:sensor_motion:158d000121c485:motion" }
Number      sensor_motion_office_motion_timer                           "Bewegingssensor kantoor monitor (timer) [%d]"                                      <clock>                 (g_mihome_motionsensor_kantoor_monitor)                                                                             { channel="mihome:sensor_motion:158d000121c485:motionOffTimer" }      // minimum 5 seconds - remember that the sensor only triggers every minute to save energy
DateTime    sensor_motion_office_last_motion                            "Bewegingssensor kantoor monitor (last motion) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"    <motion>                (g_mihome_motionsensor_kantoor_monitor, ff_office, g_restore)                                                       { channel="mihome:sensor_motion:158d000121c485:lastMotion" }
Number      sensor_motion_office_battery                                "Bewegingssensor kantoor monitor (battery) [%d %%]"                                 <battery>               (g_mihome_motionsensor_kantoor_monitor, g_restore, g_chart, g_elastic_mqtt)                                                         { channel="mihome:sensor_motion:158d000121c485:batteryLevel" }
Switch      sensor_motion_office_battery_low                            "Bewegingssensor kantoor monitor (battery low) [%s]"                                <energy>                (g_mihome_motionsensor_kantoor_monitor, g_restore)                                                                  { channel="mihome:sensor_motion:158d000121c485:lowBattery" }

// bewegingssensor kantoor(hoek plafond) mihome:sensor_motion_aq2:158d0001b1d1ff:motion
Switch      sensor_motion_office_plafond_motion_status                          "Bewegingssensor kantoor plafond (status) [%s]"                                     <motion>                (g_mihome_motionsensor_kantoor_plafond, ff_office)                                                                  { channel="mihome:sensor_motion_aq2:158d0001b1d1ff:motion" }
Number      sensor_motion_office_plafond_motion_timer                           "Bewegingssensor kantoor plafond (timer) [%d]"                                      <clock>                 (g_mihome_motionsensor_kantoor_plafond)                                                                             { channel="mihome:sensor_motion_aq2:158d0001b1d1ff:motionOffTimer" }      // minimum 5 seconds - remember that the sensor only triggers every minute to save energy
DateTime    sensor_motion_office_plafond_last_motion                            "Bewegingssensor kantoor plafond (last motion) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"    <motion>                (g_mihome_motionsensor_kantoor_plafond, ff_office, g_restore)                                                       { channel="mihome:sensor_motion_aq2:158d0001b1d1ff:lastMotion" }
Number      sensor_motion_office_plafond_battery                                "Bewegingssensor kantoor plafond (battery) [%d %%]"                                 <battery>               (g_mihome_motionsensor_kantoor_plafond, g_restore, g_chart, g_elastic_mqtt)                                                         { channel="mihome:sensor_motion_aq2:158d0001b1d1ff:batteryLevel" }
Switch      sensor_motion_office_plafond_battery_low                            "Bewegingssensor kantoor plafond (battery low) [%s]"                                <energy>                (g_mihome_motionsensor_kantoor_plafond, g_restore)                                                                  { channel="mihome:sensor_motion_aq2:158d0001b1d1ff:lowBattery" }


// ========= SLAAPKAMER =========
// nog iets aan ZWAVE plaatsen oid. / of hue
// Xiaomi Aqara temp/humid/pressure sensor
Number      sensor_weather_slaapkamer_temperature                           "Weersensor slaapkamer (temperature) [%.1f °C]"                             <temperature>           (g_mihome_weathersensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                       { channel="mihome:sensor_weather_v1:158d0001e41223:temperature" }
Number      sensor_weather_slaapkamer_humidity                              "Weersensor slaapkamer (humidity) [%.1f %%]"                                <humidity>              (g_mihome_weathersensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                              { channel="mihome:sensor_weather_v1:158d0001e41223:humidity" }
Number      sensor_weather_slaapkamer_pressure                              "Weersensor slaapkamer (pressure) [%.3f]"                                   <temperature>           (g_mihome_weathersensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                             { channel="mihome:sensor_weather_v1:158d0001e41223:pressure" }
Number      sensor_weather_slaapkamer_battery                               "Weersensor slaapkamer (battery) [%d %%]"                                   <battery>               (g_mihome_weathersensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                                                           { channel="mihome:sensor_weather_v1:158d0001e41223:batteryLevel" }
Switch      sensor_weather_slaapkamer_battery_low                           "Weersensor slaapkamer (battery low) [%s]"                                  <energy>                (g_mihome_weathersensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                                                                   { channel="mihome:sensor_weather_v1:158d0001e41223:lowBattery" }

// raamsensor slaapkamer
Contact     sensor_slaapkamer_raam_switch_status                            "Raamsensor slaapkamer (status) [%s]"                                          <door>                  (g_mihome_raamsensor_slaapkamer,ff_bedroom,g_restore)                                                           { channel="mihome:sensor_magnet_aq2:158d0001de64c9:isOpen" }
Number      sensor_slaapkamer_raam_alarm_timer                              "Raamsensor slaapkamer (alarm timer) [%d]"                                     <clock>                 (g_mihome_raamsensor_slaapkamer,ff_bedroom)                                                                     { channel="mihome:sensor_magnet_aq2:158d0001de64c9:isOpenAlarmTimer" }       // minimum 30 seconds
DateTime    sensor_slaapkamer_raam_last_opened                              "Raamsensor slaapkamer (Lastopenend) [%1$tY-%1$tm-%1$td  %1$tH:%1$tM]"         <clock-on>              (g_mihome_raamsensor_slaapkamer,ff_bedroom,g_restore)                                                           { channel="mihome:sensor_magnet_aq2:158d0001de64c9:lastOpened" }
Number      sensor_slaapkamer_raam_battery                                  "Raamsensor slaapkamer (battery) [%d %%]"                                      <battery>               (g_mihome_raamsensor_slaapkamer,ff_bedroom,g_chart, g_elastic_mqtt)                                                             { channel="mihome:sensor_magnet_aq2:158d0001de64c9:batteryLevel" }
Switch      sensor_slaapkamer_raam_battery_low                              "Raamsensor slaapkamer (battery low) [%s]"                                     <energy>                (g_mihome_raamsensor_slaapkamer,ff_bedroom)                                                                     { channel="mihome:sensor_magnet_aq2:158d0001de64c9:lowBattery" }


// Xiaomi Switch - see "xiaomi.rules" for action triggers (kant claudia)
Number     switch_all_off_battery                                           "all off switch - Claudia (battery)"                                                  <battery>               (g_mihome_switch_slaapkamer_claudia, g_restore, g_chart, g_elastic_mqtt)                                                               { channel="mihome:sensor_switch:158d00016c0af6:batteryLevel" }
Switch     switch_all_off_battery_low                                       "all off switch - Claudia (battery-low)"                                              <energy>                (g_mihome_switch_slaapkamer_claudia, g_restore)                                                                        { channel="mihome:sensor_switch:158d00016c0af6:lowBattery" }

// Xiaomi Switch - see "xiaomi.rules" for action triggers (kant Rick)
Number     switch_all_off_rick_battery                                      "all off switch - Rick (battery)"                                                  <battery>               (g_mihome_switch_slaapkamer_rick, g_restore, g_chart, g_elastic_mqtt)                                                               { channel="mihome:sensor_switch:158d000210bee8:batteryLevel" }
Switch     switch_all_off_rick_battery_low                                  "all off switch - Rick (battery-low)"                                              <energy>                (g_mihome_switch_slaapkamer_rick, g_restore)                                                                        { channel="mihome:sensor_switch:158d000210bee8:lowBattery" }

// hue ambiance lamp
Switch		light_plafond_slaapkamer_toggle						            "Plafondlamp slaapkamer (switch) [%s]"										                    (g_hue_lamp_plafond_slaapkamer, ff_bed, lights, scene_all_off)					                            { channel="hue:0220:0017884775f9:3:brightness"}
Switch		light_plafond_slaapkamer_setting_all_off				        "Plafondlamp slaapkamer (all off)"  									<switch>                (g_hue_lamp_plafond_slaapkamer, settings_all_off_selection, g_restore)
Dimmer 		light_plafond_slaapkamer_colortemp					            "Plafondlamp slaapkamer (colortemp) [%d]"									                        (g_hue_lamp_plafond_slaapkamer, ff_bed)						                                                { channel="hue:0220:0017884775f9:3:color_temperature"}
Dimmer 	 	light_plafond_slaapkamer_dimmer						            "Plafondlamp slaapkamer (dimmer) [%d %%]"										                (g_hue_lamp_kantoor_midden, ff_bed)						                                                { channel="hue:0220:0017884775f9:3:brightness"}

Dimmer 	 	light_plafond_slaapkamer_dimmer_setting_mood_light	            "Mood light (dimmer) [%d %%]"						        <light>                                  (settings_bedroom_light_settings, g_restore)						                                                
Dimmer 		light_plafond_slaapkamer_colortemp_setting_mood_light           "Mood light (Colortemp) [%d]"							    <temperature>                                 (settings_bedroom_light_settings, g_restore)						                                        
Dimmer 	 	light_plafond_slaapkamer_dimmer_setting_full_light				"Full light (dimmer) [%d %%]"								<light>                                       (settings_bedroom_light_settings, g_restore)						                                                
Dimmer 		light_plafond_slaapkamer_colortemp_setting_full_light		    "Full light (Colortemp) [%d]"								<temperature>                                  (settings_bedroom_light_settings, g_restore)						                                        
