

// deurbel
Switch                      switch_deurbel_net_online
                            "Deurbel (net) [%s]"
                            <network>
                            (g_sonoff_deurbel)
                            { channel="network:pingdevice:192_168_1_163:online" }

Number                      switch_deurbel_net_time
                            "Deurbel (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_deurbel,g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_163:latency" }

DateTime                    switch_deurbel_net_lastseen
                            "Deurbel (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_deurbel)
                            { channel="network:pingdevice:192_168_1_163:lastseen" }


Switch                      switch_deurbel_toggle
                            "Deurbel (switch) [%s]"
                            <light>
                            (g_sonoff_deurbel, gf_corridor)
                            { channel="mqtt:topic:local:sonoff_switch_deurbel:channel_sonoff_switch_deurbel_toggle" }
                            //{ mqtt=">[mosquitto:cmnd/sonoff_switch_deurbel/power:command:*:default], <[mosquitto:stat/sonoff_switch_deurbel/POWER:state:default]" }

String                      switch_deurbel_toggle_startup_state
                            "Deurbel (startup state) [%s]"
                            <light>
                            (g_sonoff_deurbel, gf_corridor,g_maintenance_sonoff_status, g_sonoff_startup_states)
                            { channel="mqtt:topic:local:sonoff_switch_deurbel:channel_sonoff_switch_deurbel_toggle_startup_state" }
                            //{ mqtt="<[mosquitto:stat/sonoff_switch_deurbel/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }

String                      switch_deurbel_reachable
                            "Deurbel (reachable) [%s]"
                            <switch>
                            (g_sonoff_deurbel)
                            { channel="mqtt:topic:local:sonoff_switch_deurbel:channel_switch_led_strip_tv_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_deurbel/LWT:state:MAP(reachable.map)]" }

String                      switch_deurbel_rssi
                            "Deurbel (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_deurbel, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_switch_deurbel:channel_switch_led_strip_tv_rssi" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_deurbel/STATE:state:JSONPATH($.Wifi.RSSI)]" }

String                      switch_deurbel_action__sonoff_switch_deurbel
                            "Deurbel (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      switch_deurbel_local_fw_version
                            "Deurbel (running fw version) [%s]"
                            (g_sonoff_deurbel, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:sonoff_switch_deurbel:channel_switch_led_strip_tv_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_deurbel/INFO1:state:JSONPATH($.Version)],<[mosquitto:stat/sonoff_switch_deurbel/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      switch_deurbel_fw_version
                            "Deurbel (fw version) [%s]"
                            (g_sonoff_deurbel, g_maintenance_sonoff_status)


Switch                      switch_deurbel_unifi_online
                            "Deurbel (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:online" }

String                      switch_deurbel_unifi_site
                            "Deurbel (U-site)"
                            <network>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:site" }

String                      switch_deurbel_unifi_ap
                            "Deurbel (U-ap)"
                            <network>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:ap" }

String                      switch_deurbel_unifi_essid
                            "Deurbel (U-essid)"
                            <chart>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:essid" }

Number                      switch_deurbel_unifi_rssi
                            "Deurbel (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:rssi" }

Number                      switch_deurbel_unifi_uptime
                            "Deurbel (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:uptime" }

DateTime                    switch_deurbel_unifi_lastseen
                            "Deurbel (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_deurbel)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_deurbel:lastSeen" }



// groene tl
Switch                      switch_groene_tl_net_online
                            "Groene TL (net) [%s]"
                            <network>
                            (g_sonoff_green_tl)
                            { channel="network:pingdevice:192_168_1_152:online" }

Number                      switch_groene_tl_net_time
                            "Groene TL (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_green_tl,g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_152:latency" }

DateTime                    switch_groene_tl_net_lastseen
                            "Groene TL (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_green_tl)
                            { channel="network:pingdevice:192_168_1_152:lastseen" }

Switch                      switch_groene_tl_toggle
                            "Groene TL (switch) [%s]"
                            <light>
                            (g_sonoff_green_tl, gf_living, lights, scene_all_off)
                            { channel="mqtt:topic:local:sonoff_switch_groene_tl:channel_switch_groene_tl_toggle" }
                            //{ mqtt=">[mosquitto:cmnd/sonoff_green_tl/power:command:*:default], <[mosquitto:stat/sonoff_green_tl/POWER:state:default]" }

Switch                      switch_groene_tl_setting_all_off
                            "Groene TL (all off)"
                            <switch>
                            (g_sonoff_green_tl, settings_all_off_selection, g_restore)
                            

String                      switch_groene_tl_toggle_startup_state
                            "Groene TL (startup state) [%s]"
                            <light>
                            (g_sonoff_green_tl, gf_living,g_maintenance_sonoff_status, g_sonoff_startup_states)
                            { channel="mqtt:topic:local:sonoff_switch_groene_tl:channel_switch_groene_tl_toggle_startup_state" }
                            //{ mqtt="<[mosquitto:stat/sonoff_green_tl/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }

String                      switch_groene_tl_reachable
                            "Groene TL (reachable) [%s]"
                            <switch>
                            (g_sonoff_green_tl)
                            { channel="mqtt:topic:local:sonoff_switch_groene_tl:channel_switch_groene_tl_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_green_tl/LWT:state:MAP(reachable.map)]" }

String                      switch_groene_tl_rssi
                            "Groene TL (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_green_tl, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_switch_groene_tl:channel_switch_groene_tl_rssi" }
                            //{ mqtt="<[mosquitto:tele/sonoff_green_tl/STATE:state:JSONPATH($.Wifi.RSSI)]" }

String                      switch_groene_tl_action__sonoff_green_tl
                            "Groene TL (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      switch_groene_tl_local_fw_version
                            "Groene TL (running fw version) [%s]"
                            (g_sonoff_green_tl, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:sonoff_switch_groene_tl:channel_switch_groene_tl_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_green_tl/INFO1:state:JSONPATH($.Version)],<[mosquitto:stat/sonoff_green_tl/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      switch_groene_tl_fw_version
                            "Groene TL (fw version) [%s]"
                            (g_sonoff_green_tl, g_maintenance_sonoff_status)

Switch                      switch_groene_tl_unifi_online
                            "Groene TL (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:online" }

String                      switch_groene_tl_unifi_site
                            "Groene TL (U-site)"
                            <network>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:site" }

String                      switch_groene_tl_unifi_ap
                            "Groene TL (U-ap)"
                            <network>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:ap" }

String                      switch_groene_tl_unifi_essid
                            "Groene TL (U-essid)"
                            <chart>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:essid" }

Number                      switch_groene_tl_unifi_rssi
                            "Groene TL (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:rssi" }

Number                      switch_groene_tl_unifi_uptime
                            "Groene TL (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:uptime" }

DateTime                    switch_groene_tl_unifi_lastseen
                            "Groene TL (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_green_tl)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_groene_tl:lastSeen" }



// led strip tv
Switch                      switch_led_strip_tv_net_online
                            "Led strip TV (net) [%s]"
                            <network>
                            (g_sonoff_led_strip_tv)
                            { channel="network:pingdevice:192_168_1_161:online" }

Number                      switch_led_strip_tv_net_time
                            "Led strip TV (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_led_strip_tv,g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_161:latency" }

DateTime                    switch_led_strip_tv_net_lastseen
                            "Led strip TV (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_led_strip_tv, g_restore)
                            { channel="network:pingdevice:192_168_1_161:lastseen" }

Switch                      switch_led_strip_tv_toggle
                            "Led strip TV (switch) [%s]"
                            <light>
                            (g_sonoff_led_strip_tv, gf_living, lights, scene_all_off)
                            { channel="mqtt:topic:local:switch_led_strip_tv:channel_switch_led_strip_tv_toggle" }                            
                            //{ mqtt=">[mosquitto:cmnd/sonoff_switch_ledstrip_tv/power:command:*:default], <[mosquitto:stat/sonoff_switch_ledstrip_tv/POWER:state:default]" }

Switch                      switch_led_strip_tv_setting_all_off
                            "Led strip TV (all off)"
                            <switch>
                            (g_sonoff_led_strip_tv, settings_all_off_selection, g_restore)

String                      switch_led_strip_tv_toggle_startup_state
                            "Led strip TV (startup state) [%s]"
                            <light>
                            (g_sonoff_led_strip_tv, g_maintenance_sonoff_status, g_sonoff_startup_states)
                            { channel="mqtt:topic:local:switch_led_strip_tv:channel_switch_led_strip_tv_toggle_startup_state" }
                            //{ mqtt="<[mosquitto:stat/sonoff_switch_ledstrip_tv/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }

String                      switch_led_strip_tv_reachable
                            "Led strip TV (reachable) [%s]"
                            <switch>
                            (g_sonoff_led_strip_tv)
                            { channel="mqtt:topic:local:switch_led_strip_tv:channel_switch_led_strip_tv_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_ledstrip_tv/LWT:state:MAP(reachable.map)]" }

Number                      switch_led_strip_tv_rssi
                            "Led strip TV (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_led_strip_tv, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:switch_led_strip_tv:channel_switch_led_strip_tv_rssi" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_ledstrip_tv/STATE:state:JSONPATH($.Wifi.RSSI)]" }

String                      switch_led_strip_tv_action__sonoff_switch_ledstrip_tv
                            "Led strip TV (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      switch_led_strip_tv_local_fw_version
                            "Led strip TV (running fw version) [%s]"
                            (g_sonoff_led_strip_tv, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:switch_led_strip_tv:channel_switch_led_strip_tv_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_ledstrip_tv/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_switch_ledstrip_tv/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      switch_led_strip_tv_fw_version
                            "Led strip TV (fw version) [%s]"
                            (g_sonoff_led_strip_tv, g_maintenance_sonoff_status)


Switch                      switch_led_strip_tv_unifi_online
                            "Led strip TV (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:online" }

String                      switch_led_strip_tv_unifi_site
                            "Led strip TV (U-site)"
                            <network>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:site" }

String                      switch_led_strip_tv_unifi_ap
                            "Led strip TV (U-ap)"
                            <network>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:ap" }

String                      switch_led_strip_tv_unifi_essid
                            "Led strip TV (U-essid)"
                            <chart>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:essid" }

Number                      switch_led_strip_tv_unifi_rssi
                            "Led strip TV (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:rssi" }

Number                      switch_led_strip_tv_unifi_uptime
                            "Led strip TV (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:uptime" }

DateTime                    switch_led_strip_tv_unifi_lastseen
                            "Led strip TV (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_led_strip_tv)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_switch_led_strip_tv:lastSeen" }




// meter voor tvmeubel - geen toggle!
Switch                      meter_audiovideo_net_online
                            "Meter audiovideo (net) [%s]"
                            <network>
                            (g_sonoff_meter_audiovideo)
                            { channel="network:pingdevice:192_168_1_160:online" }

Number                      meter_audiovideo_net_time
                            "Meter audiovideo (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_meter_audiovideo, g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_160:latency" }

DateTime                    meter_audiovideo_net_lastseen
                            "Meter audiovideo (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_meter_audiovideo, g_restore)
                            { channel="network:pingdevice:192_168_1_160:lastseen" }

Number                      meter_audiovideo_power
                            "Meter audiovideo (power) [%.1f W]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_power" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Power)]" }

Number                      meter_audiovideo_voltage
                            "Meter audiovideo (line voltage) [%.1f V]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_voltage" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Voltage)]" }

Number                      meter_audiovideo_current
                            "Meter audiovideo (line current) [%.1f A]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_current" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Current)]" }

Number                      meter_audiovideo_real_power_factor
                            "Meter audiovideo (real power ratio) [%s]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_real_power_factor" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Factor)]" }

Number                      meter_audiovideo_energy_usage_since_last_update
                            "Meter audiovideo (usage since last update) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_energy_usage_since_last_update" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Period)]" }

Number                      meter_audiovideo_energy_usage_today
                            "Meter audiovideo (today's usage) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_energy_usage_today" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Yesterday)]" }

Number                      meter_audiovideo_energy_usage_yesterday
                            "Meter audiovideo (yesterday's usage) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_audiovideo, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_energy_usage_yesterday" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/ENERGY:state:JSONPATH($.Today)]" }

String                      meter_audiovideo_action__sonoff_meter_audiovideo
                            "Meter audiovideo (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      meter_audiovideo_local_fw_version
                            "Meter audiovideo (running fw version) [%s]"
                            (g_sonoff_meter_audiovideo, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_meter_audiovideo/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      meter_audiovideo_fw_version
                            "Meter audiovideo (fw version) [%s]"
                            (g_sonoff_meter_audiovideo, g_maintenance_sonoff_status)

Switch                      meter_audiovideo_reachable
                            "Meter audiovideo (reachable) [%s]"
                            <switch>
                            (g_sonoff_meter_audiovideo)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/LWT:state:MAP(reachable.map)]" }

Number                      meter_audiovideo_rssi
                            "Meter audiovideo (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_meter_audiovideo, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_audiovideo:channel_meter_audiovideo_rssi" } 
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_audiovideo/STATE:state:JSONPATH($.Wifi.RSSI)]" }


Switch                      meter_audiovideo_unifi_online
                            "Meter audiovideo (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:online" }

String                      meter_audiovideo_unifi_site
                            "Meter audiovideo (U-site)"
                            <network>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:site" }

String                      meter_audiovideo_unifi_ap
                            "Meter audiovideo (U-ap)"
                            <network>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:ap" }

String                      meter_audiovideo_unifi_essid
                            "Meter audiovideo (U-essid)"
                            <chart>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:essid" }

Number                      meter_audiovideo_unifi_rssi
                            "Meter audiovideo (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:rssi" }

Number                      meter_audiovideo_unifi_uptime
                            "Meter audiovideo (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:uptime" }

DateTime                    meter_audiovideo_unifi_lastseen
                            "Meter audiovideo (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_meter_audiovideo)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_audiovideo:lastSeen" }


// meter voor koelkast - geen toggle!
Switch                      meter_koelkast_net_online
                            "Meter koelkast (net) [%s]"
                            <network>
                            (g_sonoff_meter_koelkast)
                            { channel="network:pingdevice:192_168_1_159:online" }

Number                      meter_koelkast_net_time
                            "Meter koelkast (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_meter_koelkast,g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_159:latency" }

DateTime                    meter_koelkast_net_lastseen
                            "Meter koelkast (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_meter_koelkast, g_restore)
                            { channel="network:pingdevice:192_168_1_159:lastseen" }

Number                      meter_koelkast_power
                            "Meter koelkast (power) [%.1f W]"
                            <energy>
                            (g_sonoff_meter_koelkast,g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_power" }                         
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Power)]" }

Number                      meter_koelkast_voltage
                            "Meter koelkast (line voltage) [%.1f V]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_voltage" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Voltage)]" }

Number                      meter_koelkast_current
                            "Meter koelkast (line current) [%.1f A]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_current" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Current)]" }

Number                      meter_koelkast_real_power_factor
                            "Meter koelkast (real power ratio) [%s]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_real_power_factor" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Factor)]" }

Number                      meter_koelkast_energy_usage_since_last_update
                            "Meter koelkast (usage since last update) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_energy_usage_since_last_update" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Period)]" }

Number                      meter_koelkast_energy_usage_today
                            "Meter koelkast (today's usage) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_energy_usage_today" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Yesterday)]" }

Number                      meter_koelkast_energy_usage_yesterday
                            "Meter koelkast (yesterday's usage) [%.1f kWh]"
                            <energy>
                            (g_sonoff_meter_koelkast, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_energy_usage_yesterday" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/ENERGY:state:JSONPATH($.Today)]" }

String                      meter_koelkast_action__sonoff_meter_koelkast
                            "Meter koelkast (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      meter_koelkast_local_fw_version
                            "Meter koelkast (running fw version) [%s]"
                            (g_sonoff_meter_koelkast, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_meter_koelkast/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      meter_koelkast_fw_version
                            "Meter koelkast (fw version) [%s]"
                            (g_sonoff_meter_koelkast, g_maintenance_sonoff_status)

Switch                      meter_koelkast_reachable
                            "Meter koelkast (reachable) [%s]"
                            <switch>
                            (g_sonoff_meter_koelkast)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/LWT:state:MAP(reachable.map)]" }

Number                      meter_koelkast_rssi
                            "Meter koelkast (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_meter_koelkast, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_meter_koelkast:channel_meter_koelkast_rssi" }
                            //{ mqtt="<[mosquitto:tele/sonoff_meter_koelkast/STATE:state:JSONPATH($.Wifi.RSSI)]" }


Switch                      meter_koelkast_unifi_online
                            "Meter koelkast (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:online" }

String                      meter_koelkast_unifi_site
                            "Meter koelkast (U-site)"
                            <network>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:site" }

String                      meter_koelkast_unifi_ap
                            "Meter koelkast (U-ap)"
                            <network>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:ap" }

String                      meter_koelkast_unifi_essid
                            "Meter koelkast (U-essid)"
                            <chart>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:essid" }

Number                      meter_koelkast_unifi_rssi
                            "Meter koelkast (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:rssi" }

Number                      meter_koelkast_unifi_uptime
                            "Meter koelkast (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:uptime" }

DateTime                    meter_koelkast_unifi_lastseen
                            "Meter koelkast (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_meter_koelkast)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_meter_koelkast:lastSeen" }



// touch button toilet
// Switch		switch_touch_toilet_net_online							    "Switch toilet (net) [%s]"							                                    <network>				(g_sonoff_toilet_bg)                                                                                                                        { channel="network:pingdevice:192_168_1_162:online" }
// Number		switch_touch_toilet_net_time							    "Switch toilet (ping) [%.0f ms]"						                                <status>				(g_sonoff_toilet_bg,g_chart, g_elastic_mqtt)                                                                                                                { channel="network:pingdevice:192_168_1_162:latency" }
// Number		switch_touch_toilet_net_lastseen						    "Switch toilet (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"						        <status>				(g_sonoff_toilet_bg, g_restore)                                                                                                             { channel="network:pingdevice:192_168_1_162:lastseen" }
// Switch		switch_touch_toilet_toggle								    "Switch toilet (switch) [%s]"						                                    <light> 				(g_sonoff_toilet_bg, gf_corridor, lights, scene_all_off)								                                                    { mqtt=">[mosquitto:cmnd/sonoff_licht_toilet_bg/power:command:*:default], <[mosquitto:stat/sonoff_licht_toilet_bg/POWER:state:default]" }
// Switch		switch_touch_toilet_setting_all_off						    "Switch toilet (all off)"						                                        <switch> 				(g_sonoff_toilet_bg, settings_all_off_selection, g_restore)
// String		switch_touch_toilet_toggle_startup_state				    "Switch toilet (startup state) [%s]"					                                <light> 				(g_sonoff_toilet_bg, g_maintenance_sonoff_status, g_sonoff_startup_states)			                                                        { mqtt="<[mosquitto:stat/sonoff_licht_toilet_bg/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }
// String 		switch_touch_toilet_reachable							    "Switch toilet (reachable) [%s]"						                                <switch>				(g_sonoff_toilet_bg)												                                                                        { mqtt="<[mosquitto:tele/sonoff_licht_toilet_bg/LWT:state:MAP(reachable.map)]" }
// Number		switch_touch_toilet_rssi								    "Switch toilet (RSSI) [%d %%]"						                                    <status>				(g_sonoff_toilet_bg, g_chart, g_elastic_mqtt)											                                                                    { mqtt="<[mosquitto:tele/sonoff_licht_toilet_bg/STATE:state:JSONPATH($.Wifi.RSSI)]" }
// String		switch_touch_toilet_action__sonoff_licht_toilet_bg  	    "Switch toilet (action)"								                                <network>				(g_maintenance_sonoff_action)			                                                                                                    { autoupdate="false" }
// String		switch_touch_toilet_local_fw_version 					    "Switch toilet (running fw version) [%s]"									                                    (g_sonoff_toilet_bg, g_maintenance_sonoff_status, g_sonoff_firmware)		                                                                { mqtt="<[mosquitto:tele/sonoff_licht_toilet_bg/INFO1:state:JSONPATH($.Version)], <[mosquitto:stat/sonoff_licht_toilet_bg/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }
// String		switch_touch_toilet_fw_version 							    "Switch toilet (fw version) [%s]"											                                    (g_sonoff_toilet_bg, g_maintenance_sonoff_status)

// //Contact		switch_touch_toilet_unifi_online	                "Switch toilet (U-online) [MAP(unifi.map):%s]"	                                        <switch>			    (g_sonoff_toilet_bg)                                                                  	                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:online" }
// Contact		switch_touch_toilet_unifi_online	                    "Switch toilet (U-online)"                    	                                        <switch>			    (g_sonoff_toilet_bg)                                                                  	                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:online" }
// String		switch_touch_toilet_unifi_site	                        "Switch toilet (U-site)"	                                                            <network>			    (g_sonoff_toilet_bg)                                                                  	                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:site" }
// String		switch_touch_toilet_unifi_ap	                        "Switch toilet (U-ap)"                    	                                            <network>			    (g_sonoff_toilet_bg)                                                                  	                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:ap" }
// String		switch_touch_toilet_unifi_essid	                        "Switch toilet (U-essid)"	                                                            <chart>			        (g_sonoff_toilet_bg)                                                                  	                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:essid" }
// Number		switch_touch_toilet_unifi_rssi	                        "Switch toilet (U-RSSI) [%s]"						                                    <qualityofservice>	    (g_sonoff_toilet_bg)	                                                                                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:rssi" } 
// Number		switch_touch_toilet_unifi_uptime	                    "Switch toilet (U-Uptime) [%d]"						                                    <time>				    (g_sonoff_toilet_bg)	                                                                                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:uptime" }
// DateTime	switch_touch_toilet_unifi_lastseen                          "Switch toilet (U-LastSeen) [%1$tH:%1$tM:%1$tS]"                                 	    <time>	                (g_sonoff_toilet_bg)	                                                                                                                    { channel="unifi:client:unifi_thuis:unifi_sonoff_touch_toilet_beneden:lastSeen" }

// kerstboom
Switch                      switch_kerstboom_net_online
                            "Kerstboom (net) [%s]"
                            <network>
                            (g_sonoff_kerstboom)
                            { channel="network:pingdevice:192_168_1_163:online" }

Number                      switch_kerstboom_net_time
                            "Kerstboom (ping) [%.0f ms]"
                            <status>
                            (g_sonoff_kerstboom, g_chart, g_elastic_mqtt)
                            { channel="network:pingdevice:192_168_1_163:latency" }

DateTime                    switch_kerstboom_net_lastseen
                            "Kerstboom (lastseen) [%1$td.%1$tm.%1$tY %1$tH:%1$tM]"
                            <status>
                            (g_sonoff_kerstboom)
                            { channel="network:pingdevice:192_168_1_163:lastseen" }

Switch                      switch_kerstboom_toggle
                            "Kerstboom (switch) [%s]"
                            <light>
                            (g_sonoff_kerstboom, gf_living, lights, scene_all_off)
                            [ "Lighting" ]
                            { channel="mqtt:topic:local:sonoff_switch_kerstboom:channel_sonoff_switch_kerstboom_toggle" }
                            //{ mqtt=">[mosquitto:cmnd/sonoff_switch_kerstboom/power:command:*:default], <[mosquitto:stat/sonoff_switch_kerstboom/POWER:state:default]" }

Switch                      switch_kerstboom_setting_all_off
                            "Kerstboom (all off)"
                            <switch>
                            (g_sonoff_kerstboom, settings_all_off_selection, g_restore)

String                      switch_kerstboom_toggle_startup_state
                            "Kerstboom (startup state) [%s]"
                            <light>
                            (g_sonoff_kerstboom, gf_living,g_maintenance_sonoff_status, g_sonoff_startup_states)
                            { channel="mqtt:topic:local:sonoff_switch_kerstboom:channel_sonoff_switch_kerstboom_toggle_startup_state" }
                            //{ mqtt="<[mosquitto:stat/sonoff_switch_kerstboom/STATUS11:state:JSONPATH($.StatusSTS.POWER)]" }

String                      switch_kerstboom_reachable
                            "Kerstboom (reachable) [%s]"
                            <switch>
                            (g_sonoff_kerstboom)
                            { channel="mqtt:topic:local:sonoff_switch_kerstboom:channel_sonoff_switch_kerstboom_reachable" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_kerstboom/LWT:state:MAP(reachable.map)]" }

String                      switch_kerstboom_rssi
                            "Kerstboom (RSSI) [%d %%]"
                            <status>
                            (g_sonoff_kerstboom, g_chart, g_elastic_mqtt)
                            { channel="mqtt:topic:local:sonoff_switch_kerstboom:channel_sonoff_switch_kerstboom_rssi" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_kerstboom/STATE:state:JSONPATH($.Wifi.RSSI)]" }

String                      switch_kerstboom_action__sonoff_switch_kerstboom
                            "Kerstboom (action)"
                            <network>
                            (g_maintenance_sonoff_action)
                            { autoupdate="false" }

String                      switch_kerstboom_local_fw_version
                            "Kerstboom (running fw version) [%s]"
                            (g_sonoff_kerstboom, g_maintenance_sonoff_status, g_sonoff_firmware)
                            { channel="mqtt:topic:local:sonoff_switch_kerstboom:channel_sonoff_switch_kerstboom_local_fw_version" }
                            //{ mqtt="<[mosquitto:tele/sonoff_switch_kerstboom/INFO1:state:JSONPATH($.Version)],<[mosquitto:stat/sonoff_switch_kerstboom/STATUS2:state:JSONPATH($.StatusFWR.Version)]" }

String                      switch_kerstboom_fw_version
                            "Kerstboom (fw version) [%s]"
                            (g_sonoff_kerstboom, g_maintenance_sonoff_status)


Switch                      switch_kerstboom_unifi_online
                            "Kerstboom (U-online) [MAP(unifi.map):%s]"
                            <switch>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:online" }

String                      switch_kerstboom_unifi_site
                            "Kerstboom (U-site)"
                            <network>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:site" }

String                      switch_kerstboom_unifi_ap
                            "Kerstboom (U-ap)"
                            <network>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:ap" }

String                      switch_kerstboom_unifi_essid
                            "Kerstboom (U-essid)"
                            <chart>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:essid" }

Number                      switch_kerstboom_unifi_rssi
                            "Kerstboom (U-RSSI) [%s]"
                            <qualityofservice>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:rssi" }

Number                      switch_kerstboom_unifi_uptime
                            "Kerstboom (U-Uptime) [%d]"
                            <time>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:uptime" }

DateTime                    switch_kerstboom_unifi_lastseen
                            "Kerstboom (U-LastSeen) [%1$tH:%1$tM:%1$tS]"
                            <time>
                            (g_sonoff_kerstboom)
                            { channel="unifi:client:unifi_thuis:unifi_sonoff_kerstboom:lastSeen" }
